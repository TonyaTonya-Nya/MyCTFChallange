
from Crypto.Util.number import getPrime, inverse, bytes_to_long, long_to_bytes
import random
import math

q=13198797472876287864902532913662133207745076880722933181850739256048248640200371699901863528719230289037546070463557840514069399741170318469168055220829673
h=10087945478419986810683355485899283062694316065852893531674190136106148631015543635096193003039720583579764280499310840409413968369520060566979727182282589
e=8989708726503367404715754689730782388959095528339234074784589050444870239608140046626770182336762701788963731736424741343914003600890982230995409715448250
f=30165472345377893199996073216882484865326100372385032912649079590116386983603
g=76800238348919971880137962056366565547536930174141631382703859430357272008755
m=8989708726503367404715754689730782388959095528339234074784589050444870239608140046626770182336762701788963731736424741343914003600890982230995409715448250

def decrypt(q, h, f, g, e):
    a = (f*e) % q
    m = (a*inverse(f, g)) % g
    return m

m = decrypt(q, h, f, g, e)

print(long_to_bytes(m))

