from Crypto.Util.number import bytes_to_long, getPrime, long_to_bytes
import random
import math
import os


p = 92017932396773207330365205210913184771249549355771692523246399384571269833668487945963934319507538171501041280674304304879328757539798699280378034748542218248740777575679398093116579809607067129824965250071416089841516538588253944223235904445546895574651603636188746948921937704060334290364304972412697492577
enc = 87051682992840829567429886737255563980229964191963649650455667117285375334750716083826527488071966389632402954644144719710970265754062176648776448421065665281172133368294041777397049228273163978348132440822019295870429065335674151133125629968366491582233750452365390672536361224322642295053741696809519283644

keys = []
keys.append(pow(591, 65537, p))
keys.append(pow(1516, 65537, p))
keys.append(pow(2849, 65537, p))
keys.append(pow(3451, 65537, p))
keys.append(pow(4668, 65537, p))

hint = keys[0] ^ keys[1] ^ keys[2] ^ keys[3] ^ keys[4]

enc = enc * pow(keys[0]*keys[1]*keys[2]*keys[3]*keys[4], -1, p)%p

print(long_to_bytes(enc))
